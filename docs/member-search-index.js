memberSearchIndex = [{"p":"MOG_SQL","c":"Overflow","l":"addPage(String)","url":"addPage(java.lang.String)"},{"p":"MOG_SQL","c":"NonLeaf","l":"borrow(NonLeaf, NonLeaf, boolean, int, String)","url":"borrow(MOG_SQL.NonLeaf,MOG_SQL.NonLeaf,boolean,int,java.lang.String)"},{"p":"MOG_SQL","c":"Leaf","l":"borrowTuple(Object, Leaf, NonLeaf, boolean, int, Object)","url":"borrowTuple(java.lang.Object,MOG_SQL.Leaf,MOG_SQL.NonLeaf,boolean,int,java.lang.Object)"},{"p":"MOG_SQL","c":"BPTree","l":"BPTree(int, String, String)","url":"%3Cinit%3E(int,java.lang.String,java.lang.String)"},{"p":"MOG_SQL","c":"DBApp","l":"columnsContentCorrect(String, Hashtable<String, Object>)","url":"columnsContentCorrect(java.lang.String,java.util.Hashtable)"},{"p":"MOG_SQL","c":"DBApp","l":"columnsContentCorrectPartial(String, Hashtable<String, Object>)","url":"columnsContentCorrectPartial(java.lang.String,java.util.Hashtable)"},{"p":"MOG_SQL","c":"DBApp","l":"compare(Object, Object)","url":"compare(java.lang.Object,java.lang.Object)"},{"p":"MOG_SQL","c":"TuplePointer","l":"compareTo(TuplePointer)","url":"compareTo(MOG_SQL.TuplePointer)"},{"p":"MOG_SQL","c":"DBApp","l":"createBTreeIndex(String, String)","url":"createBTreeIndex(java.lang.String,java.lang.String)"},{"p":"MOG_SQL","c":"DBApp","l":"createPage(Page, String, int)","url":"createPage(MOG_SQL.Page,java.lang.String,int)"},{"p":"MOG_SQL","c":"DBApp","l":"createRTreeIndex(String, String)","url":"createRTreeIndex(java.lang.String,java.lang.String)"},{"p":"MOG_SQL","c":"DBApp","l":"createTable(String, String, Hashtable<String, String>)","url":"createTable(java.lang.String,java.lang.String,java.util.Hashtable)"},{"p":"MOG_SQL","c":"DBApp","l":"DBApp()","url":"%3Cinit%3E()"},{"p":"MOG_SQL","c":"DBAppTest","l":"DBAppTest()","url":"%3Cinit%3E()"},{"p":"MOG_SQL","c":"BPTree","l":"delete(Object, String)","url":"delete(java.lang.Object,java.lang.String)"},{"p":"MOG_SQL","c":"RTree","l":"delete(Object, String)","url":"delete(java.lang.Object,java.lang.String)"},{"p":"MOG_SQL","c":"Overflow","l":"delete(String)","url":"delete(java.lang.String)"},{"p":"MOG_SQL","c":"DBApp","l":"deleteFromTable(String, Hashtable<String, Object>)","url":"deleteFromTable(java.lang.String,java.util.Hashtable)"},{"p":"MOG_SQL","c":"DBApp","l":"deleteHelper(String, String, String, String, Vector<Integer>, Vector<Boolean>)","url":"deleteHelper(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.Vector,java.util.Vector)"},{"p":"MOG_SQL","c":"Leaf","l":"deleteKey(Object, String)","url":"deleteKey(java.lang.Object,java.lang.String)"},{"p":"MOG_SQL","c":"DBApp","l":"filter(ArrayList<Hashtable<String, Object>>, SQLTerm)","url":"filter(java.util.ArrayList,MOG_SQL.SQLTerm)"},{"p":"MOG_SQL","c":"BPTree","l":"find(Object)","url":"find(java.lang.Object)"},{"p":"MOG_SQL","c":"RTree","l":"find(Object)","url":"find(java.lang.Object)"},{"p":"MOG_SQL","c":"BPTree","l":"findNearestPage(Object)","url":"findNearestPage(java.lang.Object)"},{"p":"MOG_SQL","c":"RTree","l":"findNearestPage(Polygon)","url":"findNearestPage(java.awt.Polygon)"},{"p":"MOG_SQL","c":"DBApp","l":"finishDeletion(String, Vector<Boolean>)","url":"finishDeletion(java.lang.String,java.util.Vector)"},{"p":"MOG_SQL","c":"DBApp","l":"getClusterCol(String)","url":"getClusterCol(java.lang.String)"},{"p":"MOG_SQL","c":"DBApp","l":"getClusterColType(String)","url":"getClusterColType(java.lang.String)"},{"p":"MOG_SQL","c":"DBApp","l":"getColType(String, String)","url":"getColType(java.lang.String,java.lang.String)"},{"p":"MOG_SQL","c":"DBApp","l":"getContainPageIndex(String, String)","url":"getContainPageIndex(java.lang.String,java.lang.String)"},{"p":"MOG_SQL","c":"BPTree","l":"getEqual(String, String, Object)","url":"getEqual(java.lang.String,java.lang.String,java.lang.Object)"},{"p":"MOG_SQL","c":"RTree","l":"getEqual(String, String, Object)","url":"getEqual(java.lang.String,java.lang.String,java.lang.Object)"},{"p":"MOG_SQL","c":"BPTree","l":"getGreaterThan(String, String, Object)","url":"getGreaterThan(java.lang.String,java.lang.String,java.lang.Object)"},{"p":"MOG_SQL","c":"RTree","l":"getGreaterThan(String, String, Object)","url":"getGreaterThan(java.lang.String,java.lang.String,java.lang.Object)"},{"p":"MOG_SQL","c":"BPTree","l":"getGreaterThanEqual(String, String, Object)","url":"getGreaterThanEqual(java.lang.String,java.lang.String,java.lang.Object)"},{"p":"MOG_SQL","c":"RTree","l":"getGreaterThanEqual(String, String, Object)","url":"getGreaterThanEqual(java.lang.String,java.lang.String,java.lang.Object)"},{"p":"MOG_SQL","c":"DBApp","l":"getIndexBinSearch(String, String, int)","url":"getIndexBinSearch(java.lang.String,java.lang.String,int)"},{"p":"MOG_SQL","c":"DBApp","l":"getIndexKeys(String)","url":"getIndexKeys(java.lang.String)"},{"p":"MOG_SQL","c":"BPTree","l":"getIntersectionPages(ArrayList<String>, ArrayList<String>)","url":"getIntersectionPages(java.util.ArrayList,java.util.ArrayList)"},{"p":"MOG_SQL","c":"RTree","l":"getIntersectionPages(ArrayList<String>, ArrayList<String>)","url":"getIntersectionPages(java.util.ArrayList,java.util.ArrayList)"},{"p":"MOG_SQL","c":"TuplePointer","l":"getKey()"},{"p":"MOG_SQL","c":"BPTree","l":"getLessThan(String, String, Object)","url":"getLessThan(java.lang.String,java.lang.String,java.lang.Object)"},{"p":"MOG_SQL","c":"RTree","l":"getLessThan(String, String, Object)","url":"getLessThan(java.lang.String,java.lang.String,java.lang.Object)"},{"p":"MOG_SQL","c":"BPTree","l":"getLessThanEqual(String, String, Object)","url":"getLessThanEqual(java.lang.String,java.lang.String,java.lang.Object)"},{"p":"MOG_SQL","c":"RTree","l":"getLessThanEqual(String, String, Object)","url":"getLessThanEqual(java.lang.String,java.lang.String,java.lang.Object)"},{"p":"MOG_SQL","c":"DBApp","l":"getMaxRows()"},{"p":"MOG_SQL","c":"DBApp","l":"getNodeSize()"},{"p":"MOG_SQL","c":"DBApp","l":"getnOfRows(String)","url":"getnOfRows(java.lang.String)"},{"p":"MOG_SQL","c":"BPTree","l":"getNotEqual(String, String, Object)","url":"getNotEqual(java.lang.String,java.lang.String,java.lang.Object)"},{"p":"MOG_SQL","c":"RTree","l":"getNotEqual(String, String, Object)","url":"getNotEqual(java.lang.String,java.lang.String,java.lang.Object)"},{"p":"MOG_SQL","c":"TuplePointer","l":"getOverflow()"},{"p":"MOG_SQL","c":"DBApp","l":"getPagesForTerm(SQLTerm)","url":"getPagesForTerm(MOG_SQL.SQLTerm)"},{"p":"MOG_SQL","c":"DBApp","l":"getPagesIndices(ArrayList<String>, ArrayList<String>)","url":"getPagesIndices(java.util.ArrayList,java.util.ArrayList)"},{"p":"MOG_SQL","c":"Leaf","l":"getSecondHalf()"},{"p":"MOG_SQL","c":"NonLeaf","l":"getSecondHalf()"},{"p":"MOG_SQL","c":"DBApp","l":"getSet(Table, SQLTerm)","url":"getSet(MOG_SQL.Table,MOG_SQL.SQLTerm)"},{"p":"MOG_SQL","c":"BPTree","l":"getUnionPages(ArrayList<String>, ArrayList<String>)","url":"getUnionPages(java.util.ArrayList,java.util.ArrayList)"},{"p":"MOG_SQL","c":"RTree","l":"getUnionPages(ArrayList<String>, ArrayList<String>)","url":"getUnionPages(java.util.ArrayList,java.util.ArrayList)"},{"p":"MOG_SQL","c":"DBApp","l":"hashSub(Hashtable<String, Object>, Hashtable<String, Object>)","url":"hashSub(java.util.Hashtable,java.util.Hashtable)"},{"p":"MOG_SQL","c":"DBApp","l":"indicesIntersection(Hashtable<String, Object>, String)","url":"indicesIntersection(java.util.Hashtable,java.lang.String)"},{"p":"MOG_SQL","c":"DBApp","l":"init()"},{"p":"MOG_SQL","c":"BPTree","l":"insert(Object, String)","url":"insert(java.lang.Object,java.lang.String)"},{"p":"MOG_SQL","c":"RTree","l":"insert(Object, String)","url":"insert(java.lang.Object,java.lang.String)"},{"p":"MOG_SQL","c":"DBApp","l":"insertHelper(String, int, int, Hashtable<String, Object>)","url":"insertHelper(java.lang.String,int,int,java.util.Hashtable)"},{"p":"MOG_SQL","c":"DBApp","l":"insertIntoTable(String, Hashtable<String, Object>)","url":"insertIntoTable(java.lang.String,java.util.Hashtable)"},{"p":"MOG_SQL","c":"DBApp","l":"insertionSort(Vector<Hashtable<String, Object>>, String)","url":"insertionSort(java.util.Vector,java.lang.String)"},{"p":"MOG_SQL","c":"NonLeaf","l":"insertSorted(NodeEntry)","url":"insertSorted(MOG_SQL.NodeEntry)"},{"p":"MOG_SQL","c":"Leaf","l":"insertSorted(TuplePointer, String, Overflow)","url":"insertSorted(MOG_SQL.TuplePointer,java.lang.String,MOG_SQL.Overflow)"},{"p":"MOG_SQL","c":"DBApp","l":"intersectSets(ArrayList<Hashtable<String, Object>>, ArrayList<Hashtable<String, Object>>)","url":"intersectSets(java.util.ArrayList,java.util.ArrayList)"},{"p":"MOG_SQL","c":"Leaf","l":"Leaf(Object, String)","url":"%3Cinit%3E(java.lang.Object,java.lang.String)"},{"p":"MOG_SQL","c":"DBApp","l":"loadPage(String)","url":"loadPage(java.lang.String)"},{"p":"MOG_SQL","c":"DBApp","l":"loadTableInfo(String)","url":"loadTableInfo(java.lang.String)"},{"p":"MOG_SQL","c":"BPTree","l":"main(String[])","url":"main(java.lang.String[])"},{"p":"MOG_SQL","c":"DBApp","l":"main(String[])","url":"main(java.lang.String[])"},{"p":"MOG_SQL","c":"DBAppTest","l":"main(String[])","url":"main(java.lang.String[])"},{"p":"MOG_SQL","c":"RTree","l":"main(String[])","url":"main(java.lang.String[])"},{"p":"MOG_SQL","c":"Leaf","l":"mergeWithLeaf(Object, Leaf, NonLeaf, int, boolean, Object)","url":"mergeWithLeaf(java.lang.Object,MOG_SQL.Leaf,MOG_SQL.NonLeaf,int,boolean,java.lang.Object)"},{"p":"MOG_SQL","c":"NonLeaf","l":"mergeWithNonLeaf(Object, NonLeaf, NonLeaf, boolean, int, String)","url":"mergeWithNonLeaf(java.lang.Object,MOG_SQL.NonLeaf,MOG_SQL.NonLeaf,boolean,int,java.lang.String)"},{"p":"MOG_SQL","c":"Node","l":"Node(Object, String)","url":"%3Cinit%3E(java.lang.Object,java.lang.String)"},{"p":"MOG_SQL","c":"NodeEntry","l":"NodeEntry(Object, String, String)","url":"%3Cinit%3E(java.lang.Object,java.lang.String,java.lang.String)"},{"p":"MOG_SQL","c":"DBApp","l":"nOfColumns(String)","url":"nOfColumns(java.lang.String)"},{"p":"MOG_SQL","c":"NonLeaf","l":"NonLeaf(Object, String)","url":"%3Cinit%3E(java.lang.Object,java.lang.String)"},{"p":"MOG_SQL","c":"Overflow","l":"Overflow()","url":"%3Cinit%3E()"},{"p":"MOG_SQL","c":"Overflow","l":"pageExists(String)","url":"pageExists(java.lang.String)"},{"p":"MOG_SQL","c":"DBApp","l":"polygonEquals(Polygon, Polygon)","url":"polygonEquals(java.awt.Polygon,java.awt.Polygon)"},{"p":"MOG_SQL","c":"DBApp","l":"printTable(String)","url":"printTable(java.lang.String)"},{"p":"MOG_SQL","c":"DBApp","l":"readObject(String)","url":"readObject(java.lang.String)"},{"p":"MOG_SQL","c":"RTree","l":"RTree(int, String, String)","url":"%3Cinit%3E(int,java.lang.String,java.lang.String)"},{"p":"MOG_SQL","c":"DBApp","l":"save(Object, String)","url":"save(java.lang.Object,java.lang.String)"},{"p":"MOG_SQL","c":"DBApp","l":"selectFromTable(SQLTerm[], String[])","url":"selectFromTable(MOG_SQL.SQLTerm[],java.lang.String[])"},{"p":"MOG_SQL","c":"DBApp","l":"selectHelper(ArrayList<Hashtable<String, Object>>, SQLTerm[], String[], int)","url":"selectHelper(java.util.ArrayList,MOG_SQL.SQLTerm[],java.lang.String[],int)"},{"p":"MOG_SQL","c":"DBApp","l":"stringToPolygon(String)","url":"stringToPolygon(java.lang.String)"},{"p":"MOG_SQL","c":"DBApp","l":"tableExist(String)","url":"tableExist(java.lang.String)"},{"p":"MOG_SQL","c":"DBApp","l":"termContentCorrect(SQLTerm)","url":"termContentCorrect(MOG_SQL.SQLTerm)"},{"p":"MOG_SQL","c":"DBApp","l":"termsOP(ArrayList<String>, SQLTerm, SQLTerm, String)","url":"termsOP(java.util.ArrayList,MOG_SQL.SQLTerm,MOG_SQL.SQLTerm,java.lang.String)"},{"p":"MOG_SQL","c":"BPTree","l":"toString()"},{"p":"MOG_SQL","c":"Leaf","l":"toString()"},{"p":"MOG_SQL","c":"NonLeaf","l":"toString()"},{"p":"MOG_SQL","c":"RTree","l":"toString()"},{"p":"MOG_SQL","c":"TuplePointer","l":"TuplePointer(Object, String)","url":"%3Cinit%3E(java.lang.Object,java.lang.String)"},{"p":"MOG_SQL","c":"DBApp","l":"unionSets(ArrayList<Hashtable<String, Object>>, ArrayList<Hashtable<String, Object>>)","url":"unionSets(java.util.ArrayList,java.util.ArrayList)"},{"p":"MOG_SQL","c":"DBApp","l":"updateTable(String, String, Hashtable<String, Object>)","url":"updateTable(java.lang.String,java.lang.String,java.util.Hashtable)"},{"p":"MOG_SQL","c":"DBApp","l":"writeObject(Object, String)","url":"writeObject(java.lang.Object,java.lang.String)"},{"p":"MOG_SQL","c":"DBApp","l":"writeToMeta(String, String, Hashtable<String, String>)","url":"writeToMeta(java.lang.String,java.lang.String,java.util.Hashtable)"},{"p":"MOG_SQL","c":"DBApp","l":"XORSets(ArrayList<Hashtable<String, Object>>, ArrayList<Hashtable<String, Object>>)","url":"XORSets(java.util.ArrayList,java.util.ArrayList)"}]